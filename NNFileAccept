# todo pull a file from github and run it here
import urllib.request


import send2trash
import time
from github import Github
import base64
import pygit2
import shutil
import os

is_L2C_imported = False

counterFile = open("Counter.txt", "r+") # counts number of times files cloned
counter = int(counterFile.readlines()[-1]) # start from the last number in the counter file


def generateNewRepoName():
    global counter
    ''' 
    :return: returns a path string of the new repo name. also returns the path of test1.py, the neural net file from laptop
    '''
    LaptopCodeDirectory = 'C:\\Users\\Ashok\\Documents\\GitHub\\CompFromLaptop\\LAPTOPCODE' + str(counter)
    NNPyFile = LaptopCodeDirectory + '\\test1.py'
    return LaptopCodeDirectory, NNPyFile


def cloneLaptopToCompRepoAndCopyMainPyFile():
    g = Github("AshwinKurup", "1Ashwin_Kurup1")
    repo = g.get_user().get_repo("LaptopToComp")
    try:
        repoClone = pygit2.clone_repository(repo.git_url, generateNewRepoName()[0])  # this creates a repo, btw
        print(repoClone, "THis is the repoclone path")
        copyFileToMainDirectory()
    except ValueError:
        print("the previous repo has not yet been deleted")


def copyFileToMainDirectory():
    try:
        newPath = shutil.copy(generateNewRepoName()[1],
                           'C:\\Users\\Ashok\\Documents\\GitHub\\CompFromLaptop\\CompFromLaptop')
    except OSError:
        print("the file can't be copied yet cos the directory has not been cloned")


while True:
    cloneLaptopToCompRepoAndCopyMainPyFile() 
    try:
        import test1 # the file containing Neural Net
    except ImportError:
        print("LaptopToComp repository has not been cloned yet")
    print(test1.booleanSwitch()) # check booleanSwitch within test1 file
    print("ONE CYCLE DONE")
    counter +=1 # this represents the number of LAPTOPCODE files that have already been cloned in
    counterFile.write(str(counter) + "\n")
    counterFile.truncate() # TODO find out why need truncate















